//Vinit Dipak Chaudhari
//SYCOA34

#include <iostream>
using namespace std;
struct Employee
{
int id;
string name;
int key;
};
// class
class Hashtable
{
private:
Employee Table[10];
public:
void insertion();
void deletion();
void searching();
void display();

// hash function
int hashfunction(int key);
Hashtable();
~Hashtable();
};

// Hash_Function
int Hashtable :: hashfunction(int key)
{
return key % 10;
}
// Insertion
void Hashtable :: insertion()
{
int id, flag = 0;
string name;
cout<<"\nInsert Data: "<<endl;
cout << "Enter Employee Id " << endl;
cin >> id;
cout << "Enter Employee Name " << endl;
cin >> name;

int index = hashfunction(id);
int c = index;
while (Table[index].key != -1 && flag == 10)
{
index = (index + 1) % 10;
flag++;
}
Table[index].id = id;
Table[index].name = name;
Table[index].key = c;
}

// Searching
void Hashtable :: searching()
{
int iKey, j;
cout<<"\n# Search Data: "<<endl;
cout << "Enter the id to be searched " << endl;
cin >> iKey;
for (j = 0; j < 10; j++)
{
if (iKey == Table[j].id)
{
cout << "Employee found at index " << j << endl;
}
}
}
// Deletion
void Hashtable :: deletion()
{
int x, i;
cout<<"\n # Delete Data: "<<endl;
cout << "Enter id to be deleted" << endl;
cin >> x;
for (i = 0; i < 10; i++)
{
if (x == Table[i].id)
{
Table[i].id = -1;

Table[i].key = -1;
Table[i].name = "null";
}
}
}
// Constructor
Hashtable :: Hashtable()
{
for (int i = 0; i < 10; i++)
{
Table[i].id = -1;
Table[i].key = -1;
Table[i].name = "null";
}
}
// Destructor
Hashtable :: ~Hashtable()
{
cout<<"\nDestroyed..\n"<<endl;
}
// display
void Hashtable :: display()
{
cout<<"\nEmployee Data: "<<endl;
cout << "Key Id Name " << endl;
int j = 0;
for (j = 0; j < 10; j++)

{
cout << " " << j << " " << Table[j].id << " " << Table[j].name << endl;
}
}
int main()
{
int ch;
Hashtable ht;
do
{
cout << endl;
cout << " Hashing Menu:" << endl;
cout << "1.Insert Data" << endl;
cout << "2.Delete Data" << endl;
cout << "3.Search Data" << endl;
cout << "4.Display Data" << endl;
cout << "0.Exit" << endl;
cout << "Enter your choice: ";
cin >> ch;
// switch caseh
switch (ch)
{
case 1:
ht.insertion();
break;
case 2:
ht.deletion();

break;
case 3:
ht.searching();
break;
case 4:
ht.display();
break;
case 5:
goto end;
break;
default:
cout << "enter valid choice" << endl;
}
} while (1);
end:
cout<<"exit"<<endl;
return 0;
}